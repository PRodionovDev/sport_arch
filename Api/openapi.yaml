openapi: 3.0.3
info:
  title: API. Дипломная работа - OpenAPI 3.0
  version: 1.0.0
servers:
  - url: https://localhost/api/v1
tags:
  - name: equipment
    description: Инвентарь
  - name: map
    description: Карта
  - name: competition
    description: Соревнования
  - name: training
    description: Тренировки
  - name: user
    description: Пользователи
paths:
  /equipment:
    get:
      tags:
        - equipment
      summary: Получение списка товаров
      description: Получение списка товаров
      operationId: getEquipment
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Equipment'
        '404':
          description: Products Not Found
          content:
            application/json:
              schema:
                type: array
                items: {
                  type: string
                }
                example: []
  /equipment/{equipmentId}:
    get:
      tags:
        - equipment
      summary: Получение товара
      description: Получение товара по ID
      operationId: getEquipmentById
      parameters:
        - name: equipmentId
          in: path
          description: ID товара
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
  /map/{longitude}/{latitude}/{radius}:
    get:
      tags:
        - map
      summary: Получение точек для карты по координатам и радиусу
      description: Получение точек для карты по координатам и радиусу
      operationId: getMap
      parameters:
        - name: longitude
          in: path
          description: Долгота
          required: true
          schema:
            type: integer
            format: float
        - name: latitude
          in: path
          description: Широта
          required: true
          schema:
            type: integer
            format: float
        - name: radius
          in: path
          description: Радиус
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Map'
        '404':
          description: Points Not Found
          content:
            application/json:
              schema:
                type: array
                items: {
                  type: string
                }
                example: [ ]
  /competition:
    get:
      tags:
        - competition
      summary: Получение списка соревнований
      description: Получение списка соревнований
      operationId: getCompetition
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competition'
        '404':
          description: Competition Not Found
          content:
            application/json:
              schema:
                type: array
                items: {
                  type: string
                }
                example: [ ]
  /competition/{competitionId}:
    get:
      tags:
        - competition
      summary: Получение соревнования
      description: Получение соревнования по ID
      operationId: getCompetitionById
      parameters:
        - name: competitionId
          in: path
          description: ID соревнования
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Competition'
        '404':
          description: Competition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
  /training:
    get:
      tags:
        - training
      summary: Получение списка тренировок
      description: Получение списка тренировок
      operationId: getTraining
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Training'
        '404':
          description: Training Not Found
          content:
            application/json:
              schema:
                type: array
                items: {
                  type: string
                }
                example: [ ]
  /training/{trainingId}:
    get:
      tags:
        - training
      summary: Получение тренировки
      description: Получение тренировки по ID
      operationId: getTrainingById
      parameters:
        - name: trainingId
          in: path
          description: ID тренировки
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Training'
        '404':
          description: Training not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
  /user:
    get:
      tags:
        - user
      summary: Получение списка пользователей
      description: Получение списка пользователей
      operationId: getUser
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: Users Not Found
          content:
            application/json:
              schema:
                type: array
                items: {
                  type: string
                }
                example: [ ]
  /user/{userId}:
    get:
      tags:
        - user
      summary: Получение пользователя
      description: Получение пользователя по ID
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'

components:
  schemas:
    Equipment:
      required:
        - name
        - type
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Штанга NamePro-5
        type:
          type: string
          example: Штанги
    Map:
      required:
        - name
        - longitude
        - latitude
        - type
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Спортклуб "Медведь"
        longitude:
          type: number
          example: 55.755864
        latitude:
          type: number
          example: 37.617698
        type:
          type: string
          example: Спортивные клубы
    Competition:
      required:
        - name
        - format
        - type
        - date
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Забег 2025
        format:
          type: string
          example: offline
        type:
          type: string
          example: Марафон
        date:
          type: string
          example: 2025-01-01 07:00:00
        address:
          type: string
          example: г. новосибирск, ул. Ленина, 1
    Training:
      required:
        - name
        - description
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: программа "Эффективное похудение"
        description:
          type: string
          example: Каждое утро и вечер...
    User:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        login:
          type: string
          example: ivanov@ivan.ivanovich
        name:
          type: string
          example: Иванов Иван Иванович
        sex:
          type: boolean
          example: true
    ApiResponseNotFound:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: 'Not Found'